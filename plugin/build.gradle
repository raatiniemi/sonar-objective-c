buildscript {
    ext {
        nextVersion = "patch"
    }
}

plugins {
    id 'java'
    id 'jacoco'
    id 'org.sonarqube' version '2.6.2'
    id 'com.iadams.sonar-packaging' version '1.0-RC1'
    id 'com.cinnober.gradle.semver-git' version '2.3.1'
}

group 'me.raatiniemi.sonarqube'

sourceCompatibility = JavaVersion.VERSION_1_8

repositories {
    mavenLocal()
    mavenCentral()
}

jacoco {
    toolVersion = '0.8.1'
}

sonarqube {
    properties {
        properties['sonar.host.url'] = System.getenv('SONAR_HOST_URL')
        properties['sonar.login'] = System.getenv('SONAR_LOGIN')

        properties['sonar.projectKey'] = 'me.raatiniemi.sonarqube:objective-c'
        properties['sonar.projectName'] = 'Objective-C Sonar Plugin'
        properties['sonar.projectVersion'] = version

        properties['sonar.sourceEncoding'] = 'UTF-8'
        properties['sonar.scm.provider'] = 'git'

        properties['sonar.java.source'] = sourceCompatibility
        properties['sonar.java.target'] = targetCompatibility

        properties['sonar.sources'] = 'src/main'
        properties['sonar.tests'] = 'src/test'

        properties['sonar.java.binaries'] = 'build/classes/java/main'
        properties['sonar.java.test.binaries'] = 'build/classes/java/test'

        properties['sonar.junit.reportPaths'] = 'build/test-results/test'
        properties['sonar.jacoco.reportPaths'] = fileTree(dir: 'build', includes: ['**/*.exec'])
    }
}

pluginPackaging.dependsOn 'compileJava'

sonarPackaging {
    pluginKey = 'sonarobjectivec'
    pluginClass = 'org.sonar.plugins.objectivec.ObjectiveCPlugin'
    pluginName = 'ObjectiveC'
    pluginDescription = 'Enables analysis of Objective-C projects into SonarQube.'
    pluginLicense = 'GNU LGPL 3'
    pluginUrl = 'https://gitlab.com/raatiniemi/sonar-objective-c'
    pluginSourceUrl = 'https://gitlab.com/raatiniemi/sonar-objective-c'
    pluginDevelopers = 'Tobias Raatiniemi'
    pluginIssueTrackerUrl = 'https://gitlab.com/raatiniemi/sonar-objective-c/issues'
    skipDependenciesPackaging = false
    useChildFirstClassLoader = false
    organization {
        name = 'Raatiniemi'
        url = 'https://raatiniemi.me'
    }
}

dependencies {
    compileOnly 'org.sonarsource.sonarqube:sonar-plugin-api:7.1'
    compileOnly 'org.slf4j:slf4j-api:1.7.21'

    compile 'org.sonarsource.sslr:sslr-core:1.22'
    compile ('org.sonarsource.sslr-squid-bridge:sslr-squid-bridge:2.6.1') {
        exclude(module: 'sslr-core')
        exclude(module: 'sslr-xpath')
        exclude(module: 'sonar-plugin-api')
        exclude(module: 'picocontainer')
        exclude(module: 'slf4j-api')
        exclude(module: 'jcl-over-slf4j')
    }

    compile 'commons-lang:commons-lang:2.6'
    compile 'commons-io:commons-io:2.5'
    compile 'com.google.guava:guava:17.0'
    compile 'ant:ant:1.6'

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.sonarsource.sonarqube:sonar-plugin-api:7.1'
    testImplementation 'org.sonarsource.sonarlint.core:sonarlint-core:2.5.0.36'
    testImplementation ('org.sonarsource.sslr:sslr-testing-harness:1.22') {
        exclude(module: 'guava')
        exclude(module: 'commons-io')
        exclude(module: 'junit')
    }
}
