<sqale>
    <chc>
        <key>REUSABILITY</key>
        <name>Reusability</name>
        <chc>
            <key>MODULARITY</key>
            <name>Modularity</name>
        </chc>
        <chc>
            <key>TRANSPORTABILITY</key>
            <name>Transportability</name>
        </chc>
    </chc>
    <chc>
        <key>PORTABILITY</key>
        <name>Portability</name>
        <chc>
            <key>COMPILER_RELATED_PORTABILITY</key>
            <name>Compiler</name>
        </chc>
        <chc>
            <key>HARDWARE_RELATED_PORTABILITY</key>
            <name>Hardware</name>
        </chc>
        <chc>
            <key>LANGUAGE_RELATED_PORTABILITY</key>
            <name>Language</name>
        </chc>
        <chc>
            <key>OS_RELATED_PORTABILITY</key>
            <name>OS</name>
        </chc>
        <chc>
            <key>SOFTWARE_RELATED_PORTABILITY</key>
            <name>Software</name>
        </chc>
        <chc>
            <key>TIME_ZONE_RELATED_PORTABILITY</key>
            <name>Time zone</name>
        </chc>
    </chc>
    <chc>
        <key>MAINTAINABILITY</key>
        <name>Maintainability</name>
        <chc>
            <key>READABILITY</key>
            <name>Readability</name>
            <chc>
                <rule-repo>OCLint</rule-repo>
                <rule-key>unused method parameter</rule-key>
                <prop>
                    <key>remediationFunction</key>
                    <txt>CONSTANT_ISSUE</txt>
                </prop>
                <prop>
                    <key>offset</key>
                    <val>10</val>
                    <txt>min</txt>
                </prop>
            </chc>
            <chc>
                <rule-repo>OCLint</rule-repo>
                <rule-key>unused local variable</rule-key>
                <prop>
                    <key>remediationFunction</key>
                    <txt>CONSTANT_ISSUE</txt>
                </prop>
                <prop>
                    <key>offset</key>
                    <val>10</val>
                    <txt>min</txt>
                </prop>
            </chc>
            <chc>
                <rule-repo>OCLint</rule-repo>
                <rule-key>use number literal</rule-key>
                <prop>
                    <key>remediationFunction</key>
                    <txt>CONSTANT_ISSUE</txt>
                </prop>
                <prop>
                    <key>offset</key>
                    <val>10</val>
                    <txt>min</txt>
                </prop>
            </chc>
            <chc>
                <rule-repo>OCLint</rule-repo>
                <rule-key>use boxed expression</rule-key>
                <prop>
                    <key>remediationFunction</key>
                    <txt>CONSTANT_ISSUE</txt>
                </prop>
                <prop>
                    <key>offset</key>
                    <val>10</val>
                    <txt>min</txt>
                </prop>
            </chc>
            <chc>
                <rule-repo>OCLint</rule-repo>
                <rule-key>unnecessary else statement</rule-key>
                <prop>
                    <key>remediationFunction</key>
                    <txt>CONSTANT_ISSUE</txt>
                </prop>
                <prop>
                    <key>offset</key>
                    <val>10</val>
                    <txt>min</txt>
                </prop>
            </chc>
            <chc>
                <rule-repo>OCLint</rule-repo>
                <rule-key>unnecessary null check for dealloc</rule-key>
                <prop>
                    <key>remediationFunction</key>
                    <txt>CONSTANT_ISSUE</txt>
                </prop>
                <prop>
                    <key>offset</key>
                    <val>10</val>
                    <txt>min</txt>
                </prop>
            </chc>
            <chc>
                <rule-repo>OCLint</rule-repo>
                <rule-key>redundant local variable</rule-key>
                <prop>
                    <key>remediationFunction</key>
                    <txt>CONSTANT_ISSUE</txt>
                </prop>
                <prop>
                    <key>offset</key>
                    <val>10</val>
                    <txt>min</txt>
                </prop>
            </chc>
            <chc>
                <rule-repo>OCLint</rule-repo>
                <rule-key>redundant if statement</rule-key>
                <prop>
                    <key>remediationFunction</key>
                    <txt>CONSTANT_ISSUE</txt>
                </prop>
                <prop>
                    <key>offset</key>
                    <val>10</val>
                    <txt>min</txt>
                </prop>
            </chc>
            <chc>
                <rule-repo>OCLint</rule-repo>
                <rule-key>redundant conditional operator</rule-key>
                <prop>
                    <key>remediationFunction</key>
                    <txt>CONSTANT_ISSUE</txt>
                </prop>
                <prop>
                    <key>offset</key>
                    <val>10</val>
                    <txt>min</txt>
                </prop>
            </chc>
            <chc>
                <rule-repo>OCLint</rule-repo>
                <rule-key>use container literal</rule-key>
                <prop>
                    <key>remediationFunction</key>
                    <txt>CONSTANT_ISSUE</txt>
                </prop>
                <prop>
                    <key>offset</key>
                    <val>10</val>
                    <txt>min</txt>
                </prop>
            </chc>
            <chc>
                <rule-repo>OCLint</rule-repo>
                <rule-key>long line</rule-key>
                <prop>
                    <key>remediationFunction</key>
                    <txt>CONSTANT_ISSUE</txt>
                </prop>
                <prop>
                    <key>offset</key>
                    <val>10</val>
                    <txt>min</txt>
                </prop>
            </chc>
            <chc>
                <rule-repo>OCLint</rule-repo>
                <rule-key>long method</rule-key>
                <prop>
                    <key>remediationFunction</key>
                    <txt>CONSTANT_ISSUE</txt>
                </prop>
                <prop>
                    <key>offset</key>
                    <val>30</val>
                    <txt>min</txt>
                </prop>
            </chc>
            <chc>
                <rule-repo>OCLint</rule-repo>
                <rule-key>for loop should be while loop</rule-key>
                <prop>
                    <key>remediationFunction</key>
                    <txt>CONSTANT_ISSUE</txt>
                </prop>
                <prop>
                    <key>offset</key>
                    <val>10</val>
                    <txt>min</txt>
                </prop>
            </chc>
            <chc>
                <rule-repo>OCLint</rule-repo>
                <rule-key>too many methods</rule-key>
                <prop>
                    <key>remediationFunction</key>
                    <txt>CONSTANT_ISSUE</txt>
                </prop>
                <prop>
                    <key>offset</key>
                    <val>1</val>
                    <txt>h</txt>
                </prop>
            </chc>
            <chc>
                <rule-repo>OCLint</rule-repo>
                <rule-key>long class</rule-key>
                <prop>
                    <key>remediationFunction</key>
                    <txt>CONSTANT_ISSUE</txt>
                </prop>
                <prop>
                    <key>offset</key>
                    <val>1</val>
                    <txt>h</txt>
                </prop>
            </chc>
            <chc>
                <rule-repo>OCLint</rule-repo>
                <rule-key>too many fields</rule-key>
                <prop>
                    <key>remediationFunction</key>
                    <txt>CONSTANT_ISSUE</txt>
                </prop>
                <prop>
                    <key>offset</key>
                    <val>1</val>
                    <txt>h</txt>
                </prop>
            </chc>
            <chc>
                <rule-repo>OCLint</rule-repo>
                <rule-key>collapsible if statements</rule-key>
                <prop>
                    <key>remediationFunction</key>
                    <txt>CONSTANT_ISSUE</txt>
                </prop>
                <prop>
                    <key>offset</key>
                    <val>30</val>
                    <txt>min</txt>
                </prop>
            </chc>
            <chc>
                <rule-repo>OCLint</rule-repo>
                <rule-key>deep nested block</rule-key>
                <prop>
                    <key>remediationFunction</key>
                    <txt>CONSTANT_ISSUE</txt>
                </prop>
                <prop>
                    <key>offset</key>
                    <val>30</val>
                    <txt>min</txt>
                </prop>
            </chc>
            <chc>
                <rule-repo>OCLint</rule-repo>
                <rule-key>high cyclomatic complexity</rule-key>
                <prop>
                    <key>remediationFunction</key>
                    <txt>CONSTANT_ISSUE</txt>
                </prop>
                <prop>
                    <key>offset</key>
                    <val>30</val>
                    <txt>min</txt>
                </prop>
            </chc>
            <chc>
                <rule-repo>OCLint</rule-repo>
                <rule-key>too few branches in switch statement</rule-key>
                <prop>
                    <key>remediationFunction</key>
                    <txt>CONSTANT_ISSUE</txt>
                </prop>
                <prop>
                    <key>offset</key>
                    <val>10</val>
                    <txt>min</txt>
                </prop>
            </chc>
            <chc>
                <rule-repo>OCLint</rule-repo>
                <rule-key>non case label in switch statement</rule-key>
                <prop>
                    <key>remediationFunction</key>
                    <txt>CONSTANT_ISSUE</txt>
                </prop>
                <prop>
                    <key>offset</key>
                    <val>10</val>
                    <txt>min</txt>
                </prop>
            </chc>
            <chc>
                <rule-repo>OCLint</rule-repo>
                <rule-key>short variable name</rule-key>
                <prop>
                    <key>remediationFunction</key>
                    <txt>CONSTANT_ISSUE</txt>
                </prop>
                <prop>
                    <key>offset</key>
                    <val>10</val>
                    <txt>min</txt>
                </prop>
            </chc>
            <chc>
                <rule-repo>OCLint</rule-repo>
                <rule-key>long variable name</rule-key>
                <prop>
                    <key>remediationFunction</key>
                    <txt>CONSTANT_ISSUE</txt>
                </prop>
                <prop>
                    <key>offset</key>
                    <val>10</val>
                    <txt>min</txt>
                </prop>
            </chc>
            <chc>
                <rule-repo>OCLint</rule-repo>
                <rule-key>ill-placed default label in switch statement</rule-key>
                <prop>
                    <key>remediationFunction</key>
                    <txt>CONSTANT_ISSUE</txt>
                </prop>
                <prop>
                    <key>offset</key>
                    <val>10</val>
                    <txt>min</txt>
                </prop>
            </chc>
            <chc>
                <rule-repo>OCLint</rule-repo>
                <rule-key>unnecessary default statement in covered switch statement</rule-key>
                <prop>
                    <key>remediationFunction</key>
                    <txt>CONSTANT_ISSUE</txt>
                </prop>
                <prop>
                    <key>offset</key>
                    <val>10</val>
                    <txt>min</txt>
                </prop>
            </chc>
            <chc>
                <rule-repo>OCLint</rule-repo>
                <rule-key>use object subscripting</rule-key>
                <prop>
                    <key>remediationFunction</key>
                    <txt>CONSTANT_ISSUE</txt>
                </prop>
                <prop>
                    <key>offset</key>
                    <val>10</val>
                    <txt>min</txt>
                </prop>
            </chc>
        </chc>
        <chc>
            <key>UNDERSTANDABILITY</key>
            <name>Understandability</name>
            <chc>
                <rule-repo>OCLint</rule-repo>
                <rule-key>useless parentheses</rule-key>
                <prop>
                    <key>remediationFunction</key>
                    <txt>CONSTANT_ISSUE</txt>
                </prop>
                <prop>
                    <key>offset</key>
                    <val>10</val>
                    <txt>min</txt>
                </prop>
            </chc>
            <chc>
                <rule-repo>OCLint</rule-repo>
                <rule-key>prefer early exits and continue</rule-key>
                <prop>
                    <key>remediationFunction</key>
                    <txt>CONSTANT_ISSUE</txt>
                </prop>
                <prop>
                    <key>offset</key>
                    <val>10</val>
                    <txt>min</txt>
                </prop>
            </chc>
            <chc>
                <rule-repo>OCLint</rule-repo>
                <rule-key>high npath complexity</rule-key>
                <prop>
                    <key>remediationFunction</key>
                    <txt>CONSTANT_ISSUE</txt>
                </prop>
                <prop>
                    <key>offset</key>
                    <val>30</val>
                    <txt>min</txt>
                </prop>
            </chc>
            <chc>
                <rule-repo>OCLint</rule-repo>
                <rule-key>inverted logic</rule-key>
                <prop>
                    <key>remediationFunction</key>
                    <txt>CONSTANT_ISSUE</txt>
                </prop>
                <prop>
                    <key>offset</key>
                    <val>10</val>
                    <txt>min</txt>
                </prop>
            </chc>
            <chc>
                <rule-repo>OCLint</rule-repo>
                <rule-key>multiple unary operator</rule-key>
                <prop>
                    <key>remediationFunction</key>
                    <txt>CONSTANT_ISSUE</txt>
                </prop>
                <prop>
                    <key>offset</key>
                    <val>10</val>
                    <txt>min</txt>
                </prop>
            </chc>
            <chc>
                <rule-repo>OCLint</rule-repo>
                <rule-key>redundant nil check</rule-key>
                <prop>
                    <key>remediationFunction</key>
                    <txt>CONSTANT_ISSUE</txt>
                </prop>
                <prop>
                    <key>offset</key>
                    <val>10</val>
                    <txt>min</txt>
                </prop>
            </chc>
            <chc>
                <rule-repo>OCLint</rule-repo>
                <rule-key>high ncss method</rule-key>
                <prop>
                    <key>remediationFunction</key>
                    <txt>CONSTANT_ISSUE</txt>
                </prop>
                <prop>
                    <key>offset</key>
                    <val>10</val>
                    <txt>min</txt>
                </prop>
            </chc>
            <chc>
                <rule-repo>OCLint</rule-repo>
                <rule-key>dead code</rule-key>
                <prop>
                    <key>remediationFunction</key>
                    <txt>CONSTANT_ISSUE</txt>
                </prop>
                <prop>
                    <key>offset</key>
                    <val>10</val>
                    <txt>min</txt>
                </prop>
            </chc>
            <chc>
                <rule-repo>OCLint</rule-repo>
                <rule-key>double negative</rule-key>
                <prop>
                    <key>remediationFunction</key>
                    <txt>CONSTANT_ISSUE</txt>
                </prop>
                <prop>
                    <key>offset</key>
                    <val>10</val>
                    <txt>min</txt>
                </prop>
            </chc>
            <chc>
                <rule-repo>OCLint</rule-repo>
                <rule-key>bitwise operator in conditional</rule-key>
                <prop>
                    <key>remediationFunction</key>
                    <txt>CONSTANT_ISSUE</txt>
                </prop>
                <prop>
                    <key>offset</key>
                    <val>10</val>
                    <txt>min</txt>
                </prop>
            </chc>
            <chc>
                <rule-repo>OCLint</rule-repo>
                <rule-key>empty if statement</rule-key>
                <prop>
                    <key>remediationFunction</key>
                    <txt>CONSTANT_ISSUE</txt>
                </prop>
                <prop>
                    <key>offset</key>
                    <val>10</val>
                    <txt>min</txt>
                </prop>
            </chc>
            <chc>
                <rule-repo>OCLint</rule-repo>
                <rule-key>empty while statement</rule-key>
                <prop>
                    <key>remediationFunction</key>
                    <txt>CONSTANT_ISSUE</txt>
                </prop>
                <prop>
                    <key>offset</key>
                    <val>10</val>
                    <txt>min</txt>
                </prop>
            </chc>
            <chc>
                <rule-repo>OCLint</rule-repo>
                <rule-key>empty else block</rule-key>
                <prop>
                    <key>remediationFunction</key>
                    <txt>CONSTANT_ISSUE</txt>
                </prop>
                <prop>
                    <key>offset</key>
                    <val>10</val>
                    <txt>min</txt>
                </prop>
            </chc>
            <chc>
                <rule-repo>OCLint</rule-repo>
                <rule-key>empty for statement</rule-key>
                <prop>
                    <key>remediationFunction</key>
                    <txt>CONSTANT_ISSUE</txt>
                </prop>
                <prop>
                    <key>offset</key>
                    <val>10</val>
                    <txt>min</txt>
                </prop>
            </chc>
            <chc>
                <rule-repo>OCLint</rule-repo>
                <rule-key>empty do/while statement</rule-key>
                <prop>
                    <key>remediationFunction</key>
                    <txt>CONSTANT_ISSUE</txt>
                </prop>
                <prop>
                    <key>offset</key>
                    <val>10</val>
                    <txt>min</txt>
                </prop>
            </chc>
            <chc>
                <rule-repo>OCLint</rule-repo>
                <rule-key>empty switch statement</rule-key>
                <prop>
                    <key>remediationFunction</key>
                    <txt>CONSTANT_ISSUE</txt>
                </prop>
                <prop>
                    <key>offset</key>
                    <val>10</val>
                    <txt>min</txt>
                </prop>
            </chc>
            <chc>
                <rule-repo>OCLint</rule-repo>
                <rule-key>too many parameters</rule-key>
                <prop>
                    <key>remediationFunction</key>
                    <txt>CONSTANT_ISSUE</txt>
                </prop>
                <prop>
                    <key>offset</key>
                    <val>30</val>
                    <txt>min</txt>
                </prop>
            </chc>
            <chc>
                <rule-repo>OCLint</rule-repo>
                <rule-key>switch statements don't need default when fully covered</rule-key>
                <prop>
                    <key>remediationFunction</key>
                    <txt>CONSTANT_ISSUE</txt>
                </prop>
                <prop>
                    <key>offset</key>
                    <val>10</val>
                    <txt>min</txt>
                </prop>
            </chc>
        </chc>
    </chc>
    <chc>
        <key>SECURITY</key>
        <name>Security</name>
        <chc>
            <key>API_ABUSE</key>
            <name>API abuse</name>
			<chc>
				<rule-repo>OCLint</rule-repo>
				<rule-key>calling prohibited method</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>CONSTANT_ISSUE</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>10</val>
					<txt>min</txt>
				</prop>
			</chc>
        </chc>
        <chc>
            <key>ERRORS</key>
            <name>Errors</name>
        </chc>
        <chc>
            <key>INPUT_VALIDATION_AND_REPRESENTATION</key>
            <name>Input validation and representation</name>
        </chc>
        <chc>
            <key>SECURITY_FEATURES</key>
            <name>Security features</name>
        </chc>
    </chc>
    <chc>
        <key>EFFICIENCY</key>
        <name>Efficiency</name>
        <chc>
            <key>MEMORY_EFFICIENCY</key>
            <name>Memory use</name>
        </chc>
        <chc>
            <key>CPU_EFFICIENCY</key>
            <name>Processor use</name>
        </chc>
    </chc>
    <chc>
        <key>CHANGEABILITY</key>
        <name>Changeability</name>
        <chc>
            <key>ARCHITECTURE_CHANGEABILITY</key>
            <name>Architecture</name>
        </chc>
        <chc>
            <key>DATA_CHANGEABILITY</key>
            <name>Data</name>
        </chc>
        <chc>
            <key>LOGIC_CHANGEABILITY</key>
            <name>Logic</name>
        </chc>
    </chc>
    <chc>
        <key>RELIABILITY</key>
        <name>Reliability</name>
        <chc>
            <key>ARCHITECTURE_RELIABILITY</key>
            <name>Architecture</name>
        </chc>
        <chc>
            <key>DATA_RELIABILITY</key>
            <name>Data</name>
        </chc>
        <chc>
            <key>EXCEPTION_HANDLING</key>
            <name>Exception handling</name>
            <chc>
                <rule-repo>OCLint</rule-repo>
                <rule-key>empty finally statement</rule-key>
                <prop>
                    <key>remediationFunction</key>
                    <txt>CONSTANT_ISSUE</txt>
                </prop>
                <prop>
                    <key>offset</key>
                    <val>10</val>
                    <txt>min</txt>
                </prop>
            </chc>
            <chc>
                <rule-repo>OCLint</rule-repo>
                <rule-key>return from finally block</rule-key>
                <prop>
                    <key>remediationFunction</key>
                    <txt>CONSTANT_ISSUE</txt>
                </prop>
                <prop>
                    <key>offset</key>
                    <val>10</val>
                    <txt>min</txt>
                </prop>
            </chc>
            <chc>
                <rule-repo>OCLint</rule-repo>
                <rule-key>empty catch statement</rule-key>
                <prop>
                    <key>remediationFunction</key>
                    <txt>CONSTANT_ISSUE</txt>
                </prop>
                <prop>
                    <key>offset</key>
                    <val>10</val>
                    <txt>min</txt>
                </prop>
            </chc>
            <chc>
                <rule-repo>OCLint</rule-repo>
                <rule-key>empty try statement</rule-key>
                <prop>
                    <key>remediationFunction</key>
                    <txt>CONSTANT_ISSUE</txt>
                </prop>
                <prop>
                    <key>offset</key>
                    <val>10</val>
                    <txt>min</txt>
                </prop>
            </chc>
            <chc>
                <rule-repo>OCLint</rule-repo>
                <rule-key>throw exception from finally block</rule-key>
                <prop>
                    <key>remediationFunction</key>
                    <txt>CONSTANT_ISSUE</txt>
                </prop>
                <prop>
                    <key>offset</key>
                    <val>10</val>
                    <txt>min</txt>
                </prop>
            </chc>
        </chc>
        <chc>
            <key>FAULT_TOLERANCE</key>
            <name>Fault tolerance</name>
        </chc>
        <chc>
            <key>INSTRUCTION_RELIABILITY</key>
            <name>Instruction</name>
            <chc>
                <rule-repo>OCLint</rule-repo>
                <rule-key>must override hash with isEqual</rule-key>
                <prop>
                    <key>remediationFunction</key>
                    <txt>CONSTANT_ISSUE</txt>
                </prop>
                <prop>
                    <key>offset</key>
                    <val>5</val>
                    <txt>min</txt>
                </prop>
            </chc>
			<chc>
				<rule-repo>OCLint</rule-repo>
				<rule-key>calling protected method</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>CONSTANT_ISSUE</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>10</val>
					<txt>min</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>OCLint</rule-repo>
				<rule-key>missing abstract method implementation</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>CONSTANT_ISSUE</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>10</val>
					<txt>min</txt>
				</prop>
			</chc>
            <chc>
                <rule-repo>OCLint</rule-repo>
                <rule-key>missing hash method</rule-key>
                <prop>
                    <key>remediationFunction</key>
                    <txt>CONSTANT_ISSUE</txt>
                </prop>
                <prop>
                    <key>offset</key>
                    <val>10</val>
                    <txt>min</txt>
                </prop>
            </chc>
			<chc>
				<rule-repo>OCLint</rule-repo>
				<rule-key>missing call to base method</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>CONSTANT_ISSUE</txt>
				</prop>
				<prop>
					<key>offset</key>
					<val>10</val>
					<txt>min</txt>
				</prop>
			</chc>
            <chc>
                <rule-repo>OCLint</rule-repo>
                <rule-key>parameter reassignment</rule-key>
                <prop>
                    <key>remediationFunction</key>
                    <txt>CONSTANT_ISSUE</txt>
                </prop>
                <prop>
                    <key>offset</key>
                    <val>30</val>
                    <txt>min</txt>
                </prop>
            </chc>
            <chc>
                <rule-repo>OCLint</rule-repo>
                <rule-key>ivar assignment outside accessors or init</rule-key>
                <prop>
                    <key>remediationFunction</key>
                    <txt>CONSTANT_ISSUE</txt>
                </prop>
                <prop>
                    <key>offset</key>
                    <val>10</val>
                    <txt>min</txt>
                </prop>
            </chc>
        </chc>
        <chc>
            <key>LOGIC_RELIABILITY</key>
            <name>Logic</name>
            <chc>
                <rule-repo>OCLint</rule-repo>
                <rule-key>missing break in switch statement</rule-key>
                <prop>
                    <key>remediationFunction</key>
                    <txt>CONSTANT_ISSUE</txt>
                </prop>
                <prop>
                    <key>offset</key>
                    <val>10</val>
                    <txt>min</txt>
                </prop>
            </chc>
            <chc>
                <rule-repo>OCLint</rule-repo>
                <rule-key>avoid branching statement as last in loop</rule-key>
                <prop>
                    <key>remediationFunction</key>
                    <txt>CONSTANT_ISSUE</txt>
                </prop>
                <prop>
                    <key>offset</key>
                    <val>30</val>
                    <txt>min</txt>
                </prop>
            </chc>
            <chc>
                <rule-repo>OCLint</rule-repo>
                <rule-key>missing default in switch statements</rule-key>
                <prop>
                    <key>remediationFunction</key>
                    <txt>CONSTANT_ISSUE</txt>
                </prop>
                <prop>
                    <key>offset</key>
                    <val>10</val>
                    <txt>min</txt>
                </prop>
            </chc>
            <chc>
                <rule-repo>OCLint</rule-repo>
                <rule-key>jumbled incrementer</rule-key>
                <prop>
                    <key>remediationFunction</key>
                    <txt>CONSTANT_ISSUE</txt>
                </prop>
                <prop>
                    <key>offset</key>
                    <val>10</val>
                    <txt>min</txt>
                </prop>
            </chc>
            <chc>
                <rule-repo>OCLint</rule-repo>
                <rule-key>broken null check</rule-key>
                <prop>
                    <key>remediationFunction</key>
                    <txt>CONSTANT_ISSUE</txt>
                </prop>
                <prop>
                    <key>offset</key>
                    <val>10</val>
                    <txt>min</txt>
                </prop>
            </chc>
            <chc>
                <rule-repo>OCLint</rule-repo>
                <rule-key>broken nil check</rule-key>
                <prop>
                    <key>remediationFunction</key>
                    <txt>CONSTANT_ISSUE</txt>
                </prop>
                <prop>
                    <key>offset</key>
                    <val>10</val>
                    <txt>min</txt>
                </prop>
            </chc>
            <chc>
                <rule-repo>OCLint</rule-repo>
                <rule-key>broken oddness check</rule-key>
                <prop>
                    <key>remediationFunction</key>
                    <txt>CONSTANT_ISSUE</txt>
                </prop>
                <prop>
                    <key>offset</key>
                    <val>10</val>
                    <txt>min</txt>
                </prop>
            </chc>
            <chc>
                <rule-repo>OCLint</rule-repo>
                <rule-key>misplaced nil check</rule-key>
                <prop>
                    <key>remediationFunction</key>
                    <txt>CONSTANT_ISSUE</txt>
                </prop>
                <prop>
                    <key>offset</key>
                    <val>10</val>
                    <txt>min</txt>
                </prop>
            </chc>
            <chc>
                <rule-repo>OCLint</rule-repo>
                <rule-key>misplaced null check</rule-key>
                <prop>
                    <key>remediationFunction</key>
                    <txt>CONSTANT_ISSUE</txt>
                </prop>
                <prop>
                    <key>offset</key>
                    <val>10</val>
                    <txt>min</txt>
                </prop>
            </chc>
            <chc>
                <rule-repo>OCLint</rule-repo>
                <rule-key>goto statement</rule-key>
                <prop>
                    <key>remediationFunction</key>
                    <txt>CONSTANT_ISSUE</txt>
                </prop>
                <prop>
                    <key>offset</key>
                    <val>30</val>
                    <txt>min</txt>
                </prop>
            </chc>
            <chc>
                <rule-repo>OCLint</rule-repo>
                <rule-key>goto statement</rule-key>
                <prop>
                    <key>remediationFunction</key>
                    <txt>CONSTANT_ISSUE</txt>
                </prop>
                <prop>
                    <key>offset</key>
                    <val>30</val>
                    <txt>min</txt>
                </prop>
            </chc>
            <chc>
                <rule-repo>OCLint</rule-repo>
                <rule-key>constant if expression</rule-key>
                <prop>
                    <key>remediationFunction</key>
                    <txt>CONSTANT_ISSUE</txt>
                </prop>
                <prop>
                    <key>offset</key>
                    <val>10</val>
                    <txt>min</txt>
                </prop>
            </chc>
            <chc>
                <rule-repo>OCLint</rule-repo>
                <rule-key>constant conditional operator</rule-key>
                <prop>
                    <key>remediationFunction</key>
                    <txt>CONSTANT_ISSUE</txt>
                </prop>
                <prop>
                    <key>offset</key>
                    <val>10</val>
                    <txt>min</txt>
                </prop>
            </chc>
        </chc>
        <chc>
            <key>RESOURCE_RELIABILITY</key>
            <name>Resource</name>
        <chc>
            <key>UNIT_TESTS</key>
            <name>Unit tests coverage</name>
        </chc>
    </chc>
    </chc>
    <chc>
        <key>TESTABILITY</key>
        <name>Testability</name>
        <chc>
            <key>INTEGRATION_TESTABILITY</key>
            <name>Integration level</name>
        </chc>
        <chc>
            <key>UNIT_TESTABILITY</key>
            <name>Unit level</name>
        </chc>
    </chc>
</sqale>
